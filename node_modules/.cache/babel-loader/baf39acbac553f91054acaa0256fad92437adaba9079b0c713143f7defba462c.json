{"ast":null,"code":"var _jsxFileName = \"C:\\\\College\\\\IR\\\\project 3 submission\\\\front-end\\\\src\\\\ResponseAccuracyChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponseAccuracyChart = () => {\n  _s();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/response-accuracy').then(response => response.json()).then(data => setData(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const accuracyChartData = {\n    labels: Object.keys(data),\n    datasets: [{\n      label: 'Right Responses',\n      data: Object.values(data).map(item => item.right),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)'\n    }, {\n      label: 'Wrong Responses',\n      data: Object.values(data).map(item => item.wrong),\n      backgroundColor: 'rgba(255, 99, 132, 0.6)'\n    }]\n  };\n  const whiteLabelBackgroundPlugin = {\n    id: 'whiteLabelBackgroundPlugin',\n    afterDraw(chart) {\n      const ctx = chart.ctx;\n      const xAxis = chart.scales['x-axis-0'];\n      const yAxis = chart.scales['y-axis-0'];\n      ctx.save();\n      ctx.font = Chart.helpers.toFont(xAxis.options.ticks).string;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      xAxis.ticks.forEach((tick, index) => {\n        const x = xAxis.getPixelForTick(index);\n        const y = yAxis.bottom + 10; // Adjust as needed\n        const padding = 6; // Padding around the text\n        const textWidth = ctx.measureText(tick.label).width;\n\n        // Draw background\n        ctx.fillStyle = 'white';\n        ctx.fillRect(x - textWidth / 2 - padding / 2, y - padding / 2, textWidth + padding, xAxis.options.ticks.font.size + padding);\n\n        // Draw text\n        ctx.fillStyle = xAxis.options.ticks.color;\n        ctx.fillText(tick.label, x, y + xAxis.options.ticks.font.size / 2);\n      });\n      ctx.restore();\n    }\n  };\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          color: 'white'\n        }\n      },\n      y: {\n        ticks: {\n          color: 'black'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        labels: {\n          color: 'black'\n        }\n      },\n      whiteBackground: {\n        id: 'whiteBackground',\n        beforeDraw(chart, args, options) {\n          const {\n            ctx,\n            chartArea: {\n              left,\n              top,\n              width,\n              height\n            }\n          } = chart;\n          ctx.save();\n          ctx.fillStyle = 'white';\n          ctx.fillRect(left, top, width, height);\n          ctx.restore();\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: accuracyChartData,\n    options: options,\n    plugins: [options.plugins.whiteBackground]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 13\n  }, this);\n};\n_s(ResponseAccuracyChart, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = ResponseAccuracyChart;\nexport default ResponseAccuracyChart;\nvar _c;\n$RefreshReg$(_c, \"ResponseAccuracyChart\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","jsxDEV","_jsxDEV","ResponseAccuracyChart","_s","data","setData","fetch","then","response","json","catch","error","console","accuracyChartData","labels","Object","keys","datasets","label","values","map","item","right","backgroundColor","wrong","whiteLabelBackgroundPlugin","id","afterDraw","chart","ctx","xAxis","scales","yAxis","save","font","helpers","toFont","options","ticks","string","textAlign","textBaseline","forEach","tick","index","x","getPixelForTick","y","bottom","padding","textWidth","measureText","width","fillStyle","fillRect","size","color","fillText","restore","plugins","legend","whiteBackground","beforeDraw","args","chartArea","left","top","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/College/IR/project 3 submission/front-end/src/ResponseAccuracyChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst ResponseAccuracyChart = () => {\r\n    const [data, setData] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch('http://127.0.0.1:5000/response-accuracy')\r\n            .then(response => response.json())\r\n            .then(data => setData(data))\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    }, []);\r\n\r\n    const accuracyChartData = {\r\n        labels: Object.keys(data),\r\n        datasets: [\r\n            {\r\n                label: 'Right Responses',\r\n                data: Object.values(data).map(item => item.right),\r\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n            },\r\n            {\r\n                label: 'Wrong Responses',\r\n                data: Object.values(data).map(item => item.wrong),\r\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\r\n            },\r\n        ],\r\n    };\r\n    \r\n    const whiteLabelBackgroundPlugin = {\r\n        id: 'whiteLabelBackgroundPlugin',\r\n        afterDraw(chart) {\r\n            const ctx = chart.ctx;\r\n            const xAxis = chart.scales['x-axis-0'];\r\n            const yAxis = chart.scales['y-axis-0'];\r\n\r\n            ctx.save();\r\n            ctx.font = Chart.helpers.toFont(xAxis.options.ticks).string;\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n\r\n            xAxis.ticks.forEach((tick, index) => {\r\n                const x = xAxis.getPixelForTick(index);\r\n                const y = yAxis.bottom + 10; // Adjust as needed\r\n                const padding = 6; // Padding around the text\r\n                const textWidth = ctx.measureText(tick.label).width;\r\n\r\n                // Draw background\r\n                ctx.fillStyle = 'white';\r\n                ctx.fillRect(x - textWidth / 2 - padding / 2, y - padding / 2, textWidth + padding, xAxis.options.ticks.font.size + padding);\r\n\r\n                // Draw text\r\n                ctx.fillStyle = xAxis.options.ticks.color;\r\n                ctx.fillText(tick.label, x, y + xAxis.options.ticks.font.size / 2);\r\n            });\r\n\r\n            ctx.restore();\r\n        }\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    color: 'white'\r\n                }\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    color: 'black'\r\n                }\r\n            }\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                labels: {\r\n                    color: 'black'\r\n                }\r\n            },\r\n            whiteBackground: {\r\n                id: 'whiteBackground',\r\n                beforeDraw(chart, args, options) {\r\n                    const {ctx, chartArea: {left, top, width, height}} = chart;\r\n                    ctx.save();\r\n                    ctx.fillStyle = 'white';\r\n                    ctx.fillRect(left, top, width, height);\r\n                    ctx.restore();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n     return <Bar data={accuracyChartData} options={options} plugins={[options.plugins.whiteBackground]} />;\r\n};\r\n\r\nexport default ResponseAccuracyChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}