{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./Chatbot.css';import TotalQueries from'./TotalQueries';import TopicDistributionPieChart from'./TopicDistributionPieChart';import{Chart as ChartJS,CategoryScale,LinearScale,ArcElement,Tooltip,Legend}from'chart.js';// Register the necessary components for Chart.js\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,ArcElement,Tooltip,Legend);const Chatbot=()=>{const[input,setInput]=useState('');const[messages,setMessages]=useState([]);const[showChart,setShowChart]=useState(false);// Added state for toggling the chart\nconst[showTotalQueries,setShowTotalQueries]=useState(false);// State to toggle total queries\nconst[coverVisible,setCoverVisible]=useState(true);// State for page cover visibility\nconst chatBoxRef=useRef(null);useEffect(()=>{// Scroll to the bottom of the chat box whenever messages change\nif(chatBoxRef.current){chatBoxRef.current.scrollTop=chatBoxRef.current.scrollHeight;}},[messages]);const sendMessage=event=>{event.preventDefault();if(input){setMessages([...messages,{text:input,sender:'user'}]);processUserMessage(input);setInput('');}};const processUserMessage=async message=>{try{// Fetch API call to the Flask server\nconst response=await fetch('http://34.125.19.142:9999/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:message})});// Handling the response from the server\nif(response.ok){const data=await response.json();// Initialize an empty array for response messages\nlet responseMessages=[];// If user_topic is present in the response, add it to the messages first\nif(data.user_topic){responseMessages.push({text:\"Topic: \".concat(data.user_topic),sender:'bot'});}// Add the response summary next\nresponseMessages.push({text:data.response,sender:'bot'});// Update the state with the new messages\nsetMessages(messages=>[...messages,...responseMessages]);}else{console.error('Failed to send message:',response.statusText);}}catch(error){console.error('There was a problem with the fetch operation:',error);}};const toggleChartVisibility=()=>{// Function to toggle the visibility of the chart\nsetShowChart(!showChart);};const hideChart=()=>{// Function to hide the chart\nsetShowChart(false);};const toggleTotalQueriesVisibility=()=>{setShowTotalQueries(!showTotalQueries);if(!showTotalQueries){// Fetch and log the total queries when showing the queries\nfetchTotalQueries();}};const revealChatbot=()=>{// Start the slide-up transition\nconst cover=document.getElementById('page-cover');if(cover){cover.style.transform='translateY(-100%)';}// Wait for transition to complete before removing the cover from the DOM\nsetTimeout(()=>{setCoverVisible(false);},500);// This should match the duration of your CSS transition\n};const fetchTotalQueries=async()=>{try{const response=await fetch('http://34.125.19.142/api/total-queries');if(response.ok){const totalQueries=await response.json();console.log('Total Queries:',totalQueries);}else{console.error('Failed to fetch total queries');}}catch(error){console.error('Error fetching total queries:',error);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[coverVisible&&/*#__PURE__*/_jsx(\"div\",{id:\"page-cover\",onClick:revealChatbot,children:/*#__PURE__*/_jsx(\"h1\",{children:\"Cyber Seeker Chatbot\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container \".concat(coverVisible?'hidden':''),children:[/*#__PURE__*/_jsx(\"div\",{id:\"chat-box\",ref:chatBoxRef,children:messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.sender==='user'?'user':'bot'),children:message.text},index))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:sendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Ask something...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]}),showTotalQueries&&/*#__PURE__*/_jsx(TotalQueries,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"toggle-chart-btn\",onClick:toggleChartVisibility,children:showChart?\"Back to Chat\":\"Topic Distribution\"}),showChart&&/*#__PURE__*/_jsx(\"button\",{className:\"hide-chart-btn\",onClick:hideChart,children:\"Back to Chat\"}),/*#__PURE__*/_jsx(\"button\",{className:\"show-queries-btn\",onClick:toggleTotalQueriesVisibility,children:showTotalQueries?\"Hide User Queries\":\"Show User Queries\"})]}),showChart&&/*#__PURE__*/_jsx(TopicDistributionPieChart,{})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","TotalQueries","TopicDistributionPieChart","Chart","ChartJS","CategoryScale","LinearScale","ArcElement","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","Chatbot","input","setInput","messages","setMessages","showChart","setShowChart","showTotalQueries","setShowTotalQueries","coverVisible","setCoverVisible","chatBoxRef","current","scrollTop","scrollHeight","sendMessage","event","preventDefault","text","sender","processUserMessage","message","response","fetch","method","headers","body","JSON","stringify","ok","data","json","responseMessages","user_topic","push","concat","console","error","statusText","toggleChartVisibility","hideChart","toggleTotalQueriesVisibility","fetchTotalQueries","revealChatbot","cover","document","getElementById","style","transform","setTimeout","totalQueries","log","children","id","onClick","className","ref","map","index","onSubmit","type","value","onChange","e","target","placeholder"],"sources":["C:/College/IR/cyber-seeker/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Chatbot.css';\r\nimport TotalQueries from './TotalQueries';\r\nimport TopicDistributionPieChart from './TopicDistributionPieChart';\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register the necessary components for Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Chatbot = () => {\r\n    const [input, setInput] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [showChart, setShowChart] = useState(false); // Added state for toggling the chart\r\n    const [showTotalQueries, setShowTotalQueries] = useState(false); // State to toggle total queries\r\n    const [coverVisible, setCoverVisible] = useState(true); // State for page cover visibility\r\n    const chatBoxRef = useRef(null);\r\n    useEffect(() => {\r\n        // Scroll to the bottom of the chat box whenever messages change\r\n        if (chatBoxRef.current) {\r\n            chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\r\n        }\r\n    }, [messages]);\r\n\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n        if (input) {\r\n            setMessages([...messages, { text: input, sender: 'user' }]);\r\n            processUserMessage(input);\r\n            setInput('');\r\n        }\r\n    };\r\n\r\n\r\n    const processUserMessage = async (message) => {\r\n        try {\r\n            // Fetch API call to the Flask server\r\n            const response = await fetch('http://34.125.19.142:9999/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ message: message })\r\n            });\r\n    \r\n            // Handling the response from the server\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                // Initialize an empty array for response messages\r\n                let responseMessages = [];\r\n    \r\n                // If user_topic is present in the response, add it to the messages first\r\n                if (data.user_topic) {\r\n                    responseMessages.push({ text: `Topic: ${data.user_topic}`, sender: 'bot' });\r\n                }\r\n                \r\n                // Add the response summary next\r\n                responseMessages.push({ text: data.response, sender: 'bot' });\r\n    \r\n                // Update the state with the new messages\r\n                setMessages(messages => [...messages, ...responseMessages]);\r\n            } else {\r\n                console.error('Failed to send message:', response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error('There was a problem with the fetch operation:', error);\r\n        }\r\n    };\r\n\r\n    const toggleChartVisibility = () => { // Function to toggle the visibility of the chart\r\n        setShowChart(!showChart);\r\n    };\r\n    \r\n    const hideChart = () => { // Function to hide the chart\r\n        setShowChart(false);\r\n    };\r\n\r\n    const toggleTotalQueriesVisibility = () => {\r\n        setShowTotalQueries(!showTotalQueries);\r\n        if (!showTotalQueries) {\r\n          // Fetch and log the total queries when showing the queries\r\n          fetchTotalQueries();\r\n        }\r\n      };\r\n\r\n    const revealChatbot = () => {\r\n        // Start the slide-up transition\r\n        const cover = document.getElementById('page-cover');\r\n        if (cover) {\r\n          cover.style.transform = 'translateY(-100%)';\r\n        }\r\n        \r\n        // Wait for transition to complete before removing the cover from the DOM\r\n        setTimeout(() => {\r\n          setCoverVisible(false);\r\n        }, 500); // This should match the duration of your CSS transition\r\n      };\r\n\r\n    const fetchTotalQueries = async () => {\r\n        try {\r\n          const response = await fetch('http://34.125.19.142/api/total-queries');\r\n          if (response.ok) {\r\n            const totalQueries = await response.json();\r\n            console.log('Total Queries:', totalQueries);\r\n          } else {\r\n            console.error('Failed to fetch total queries');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching total queries:', error);\r\n        }\r\n      };\r\n\r\n      return (\r\n        <>\r\n          {coverVisible && (\r\n            <div id=\"page-cover\" onClick={revealChatbot}>\r\n              <h1>Cyber Seeker Chatbot</h1>\r\n            </div>\r\n          )}\r\n          <div className={`chat-container ${coverVisible ? 'hidden' : ''}`}>\r\n            <div id=\"chat-box\" ref={chatBoxRef}>\r\n              {messages.map((message, index) => (\r\n                <div key={index} className={`message ${message.sender === 'user' ? 'user' : 'bot'}`}>\r\n                  {message.text}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <form onSubmit={sendMessage}>\r\n              <input\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                placeholder=\"Ask something...\"\r\n              />\r\n              <button type=\"submit\">Send</button>\r\n            </form>\r\n            {showTotalQueries && <TotalQueries />}\r\n            <div className=\"chart-controls\">\r\n              <button className=\"toggle-chart-btn\" onClick={toggleChartVisibility}>\r\n                {showChart ? \"Back to Chat\" : \"Topic Distribution\"}\r\n              </button>\r\n              {showChart && <button className=\"hide-chart-btn\" onClick={hideChart}>Back to Chat</button>}\r\n              <button className=\"show-queries-btn\" onClick={toggleTotalQueriesVisibility}>\r\n                {showTotalQueries ? \"Hide User Queries\" : \"Show User Queries\"}\r\n              </button>\r\n            </div>\r\n            {showChart && <TopicDistributionPieChart />}\r\n          </div>\r\n        </>\r\n      );\r\n    };\r\n\r\n\r\nexport default Chatbot;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}