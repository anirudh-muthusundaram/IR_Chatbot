{"ast":null,"code":"var _jsxFileName = \"C:\\\\College\\\\IR\\\\Project Final\\\\web\\\\cyber-seeker\\\\src\\\\TopicDistributionPieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, ArcElement, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios';\n\n// Register the necessary components for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, ArcElement, Tooltip, Legend);\nconst TopicDistributionPieChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      data: [],\n      backgroundColor: [],\n      hoverBackgroundColor: []\n    }]\n  });\n  useEffect(() => {\n    const fetchTopicData = async () => {\n      try {\n        // Adjusted the endpoint to match the Flask route\n        const response = await axios.get('http://127.0.0.1:5000/topic-distribution');\n        const data = response.data;\n        const topics = Object.keys(data);\n        const counts = Object.values(data);\n\n        // Map through the topics to create colors for the chart\n        const backgroundColors = topics.map(() => `rgba(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255}, 0.6)`);\n        const hoverBackgroundColors = topics.map(() => `rgba(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255}, 0.8)`);\n        setChartData({\n          labels: topics,\n          datasets: [{\n            data: counts,\n            backgroundColor: backgroundColors,\n            hoverBackgroundColor: hoverBackgroundColors\n          }]\n        });\n      } catch (error) {\n        console.error('Error fetching topic distribution data:', error);\n      }\n    };\n    fetchTopicData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Pie, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n_s(TopicDistributionPieChart, \"wXnHaQirrZ6HFHHSLNbJAVe5EL4=\");\n_c = TopicDistributionPieChart;\nexport default TopicDistributionPieChart;\nvar _c;\n$RefreshReg$(_c, \"TopicDistributionPieChart\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","CategoryScale","LinearScale","ArcElement","Tooltip","Legend","axios","jsxDEV","_jsxDEV","register","TopicDistributionPieChart","_s","chartData","setChartData","labels","datasets","data","backgroundColor","hoverBackgroundColor","fetchTopicData","response","get","topics","Object","keys","counts","values","backgroundColors","map","Math","random","hoverBackgroundColors","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/College/IR/Project Final/web/cyber-seeker/src/TopicDistributionPieChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport axios from 'axios';\r\n\r\n// Register the necessary components for Chart.js\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst TopicDistributionPieChart = () => {\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [{\r\n      data: [],\r\n      backgroundColor: [],\r\n      hoverBackgroundColor: []\r\n    }]\r\n  });\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchTopicData = async () => {\r\n      try {\r\n        // Adjusted the endpoint to match the Flask route\r\n        const response = await axios.get('http://127.0.0.1:5000/topic-distribution');\r\n        const data = response.data;\r\n        const topics = Object.keys(data);\r\n        const counts = Object.values(data);\r\n\r\n        // Map through the topics to create colors for the chart\r\n        const backgroundColors = topics.map(() => `rgba(${Math.random()*255}, ${Math.random()*255}, ${Math.random()*255}, 0.6)`);\r\n        const hoverBackgroundColors = topics.map(() => `rgba(${Math.random()*255}, ${Math.random()*255}, ${Math.random()*255}, 0.8)`);\r\n\r\n        setChartData({\r\n          labels: topics,\r\n          datasets: [{\r\n            data: counts,\r\n            backgroundColor: backgroundColors,\r\n            hoverBackgroundColor: hoverBackgroundColors\r\n          }]\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching topic distribution data:', error);\r\n      }\r\n    };\r\n\r\n    fetchTopicData();\r\n  }, []);\r\n\r\n  return <Pie data={chartData} />;\r\n};\r\n\r\nexport default TopicDistributionPieChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CACZR,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,OAAO,EACPC,MACJ,CAAC;AAED,MAAMK,yBAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC;IACzCkB,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CAAC;MACTC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,EAAE;MACnBC,oBAAoB,EAAE;IACxB,CAAC;EACH,CAAC,CAAC;EAIFrB,SAAS,CAAC,MAAM;IACd,MAAMsB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,0CAA0C,CAAC;QAC5E,MAAML,IAAI,GAAGI,QAAQ,CAACJ,IAAI;QAC1B,MAAMM,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACR,IAAI,CAAC;QAChC,MAAMS,MAAM,GAAGF,MAAM,CAACG,MAAM,CAACV,IAAI,CAAC;;QAElC;QACA,MAAMW,gBAAgB,GAAGL,MAAM,CAACM,GAAG,CAAC,MAAO,QAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,GAAI,KAAID,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,GAAI,KAAID,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,GAAI,QAAO,CAAC;QACxH,MAAMC,qBAAqB,GAAGT,MAAM,CAACM,GAAG,CAAC,MAAO,QAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,GAAI,KAAID,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,GAAI,KAAID,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,GAAI,QAAO,CAAC;QAE7HjB,YAAY,CAAC;UACXC,MAAM,EAAEQ,MAAM;UACdP,QAAQ,EAAE,CAAC;YACTC,IAAI,EAAES,MAAM;YACZR,eAAe,EAAEU,gBAAgB;YACjCT,oBAAoB,EAAEa;UACxB,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF,CAAC;IAEDb,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOX,OAAA,CAACV,GAAG;IAACkB,IAAI,EAAEJ;EAAU;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAAC1B,EAAA,CA1CID,yBAAyB;AAAA4B,EAAA,GAAzB5B,yBAAyB;AA4C/B,eAAeA,yBAAyB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}